version: 2.1

orbs:
  windows: circleci/windows@2.4.0
  shellcheck: circleci/shellcheck@2.0.0

executors:
  python:
    parameters:
      python_version:
        type: string
        default: "3.8"
    working_directory: ~/evalml
    docker:
      - image: circleci/python:<< parameters.python_version >>
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          OMP_NUM_THREADS: 8

commands:
  install_dependencies:
    steps:
      - run: |
          virtualenv test_python -q
          source test_python/bin/activate
          make installdeps
  install_dependencies_test:
    steps:
      - run: |
            virtualenv test_python -q
            source test_python/bin/activate
            make installdeps-test
  install_dependencies_docs:
    steps:
      - run: |
            virtualenv test_python -q
            source test_python/bin/activate
            make installdeps-docs
  build_pkg:
    steps:
      - run: |
            git clone https://github.com/conda-forge/evalml-core-feedstock
            source test_python/bin/activate
            mkdir evalml-core-feedstock/evalml
            cp -r `ls -A | grep -v "evalml-core-feedstock"` ./evalml-core-feedstock/evalml/
            python .circleci/conda_config.py "$(python setup.py --version)"
            cd evalml-core-feedstock
            echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            export DOCKER_CONTAINERID="$(docker run -td condaforge/linux-anvil-cos7-x86_64)"
            echo "Created container ${DOCKER_CONTAINERID}"
            chmod -R 777 ./
            docker cp . ${DOCKER_CONTAINERID}:/home/conda/feedstock_root/
            docker cp ./recipe/. ${DOCKER_CONTAINERID}:/home/conda/recipe_root/
            echo "COMMITING UPDATED IMAGE"
            docker commit ${DOCKER_CONTAINERID} psalter/build:latest
            docker stop ${DOCKER_CONTAINERID}
            export CONFIG=linux_64_
            export UPLOAD_PACKAGES=False
            export HOST_USER_ID=$(id -u)
            export FEEDSTOCK_NAME=evalml-core-feedstock
            docker run -t -e CONFIG -e HOST_USER_ID -e UPLOAD_PACKAGES -e GIT_BRANCH -e UPLOAD_ON_BRANCH -e CI -e FEEDSTOCK_NAME -e CPU_COUNT -e BINSTAR_TOKEN -e FEEDSTOCK_TOKEN -e STAGING_BINSTAR_TOKEN psalter/build:latest bash /home/conda/feedstock_root/.scripts/build_steps.sh

jobs:
  build_conda_pkg:
    working_directory: ~/evalml/
    executor:
      name: python
      python_version: "3.8"
    steps:
      - checkout
      - install_dependencies_test
      - setup_remote_docker:
          version: 19.03.12
      - build_pkg
  build_docs:
    working_directory: ~/evalml/
    executor:
      name: python
      python_version: "3.8"
    steps:
      - checkout
      - install_dependencies_docs
      - run: sudo apt update && sudo apt install -y pandoc && sudo apt install -y graphviz
      - run: |
          source test_python/bin/activate
          make -C docs/ html
      - run: ls docs/build/html
  check_dependencies_updated_linux:
    parameters:
      python_version:
        type: string
        default: "3.8"
    executor:
      name: python
      python_version: << parameters.python_version >>
    steps:
      - checkout
      - install_dependencies
      - run:
          name: "Detect Dependency Changes"
          command: |
            source test_python/bin/activate
            mkdir /tmp/dependencies_updated_artifacts
            export DEPENDENCY_FILE_PATH=/tmp/dependencies_updated_artifacts/current_dependencies.txt
            evalml/tests/dependency_update_check/make_deps_diff.sh
            diff evalml/tests/dependency_update_check/latest_dependency_versions.txt /tmp/dependencies_updated_artifacts/current_dependencies.txt > /tmp/dependencies_updated_artifacts/diff.txt
            exit $?
      - run:
          name: "Display Dependency Diff"
          command: |
            echo Displaying dependencies which have changed, with main on the left and the new branch on the right:
            cat /tmp/dependencies_updated_artifacts/diff.txt
          when: on_fail
      - store_artifacts:
          path: /tmp/dependencies_updated_artifacts

workflows:
  version: 2
  build_docs:
    jobs:
      - build_docs:
          name: "build docs"
  check_dependencies_updated_linux:
    jobs:
        - check_dependencies_updated_linux:
            name: "linux python 3.8 check dependencies for updates"
            python_version: "3.8"
            filters:
              branches:
                ignore: /^main?/
  build_conda_pkg:
    jobs:
      - shellcheck/check
      - build_conda_pkg:
          requires:
            - shellcheck/check
          filters:
            branches:
              only: main
